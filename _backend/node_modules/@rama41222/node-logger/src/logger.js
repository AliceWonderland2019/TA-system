const fs = require('fs');
const { createLogger, format, transports } = require('winston');
require('winston-daily-rotate-file');

const env = process.env.NODE_ENV || 'development';
const levels = ['error', 'warn', 'info', 'verbose', 'debug', 'silly'];

const init = (config) => {
  const dailyRotateFileTransport = new transports.DailyRotateFile({
    filename: `${config.logDir}/%DATE%-results.log`,
    datePattern: 'YYYY-MM-DD',
  });

  const consoleTransport = new transports.Console({
    level: config.level,
    format: format.combine(
      format.colorize(),
      format.printf((info) => `${info.timestamp} ${info.level}: ${info.message}`),
    ),
  });

  if (!fs.existsSync(config.logDir)) {
    fs.mkdirSync(config.logDir);
  }

  const logger = createLogger({
    level: config.level,
    format: format.combine(
      format.label({ label: config.label }),
      format.colorize(),
      format.timestamp({
        format: 'YYYY-MM-DD HH:mm:ss',
      }),
      format.printf((info) => `${info.timestamp} ${info.level}: ${info.message}`),
    ),
    defaultMeta: { service: config.service },
    transports: [],
  });

  if (config.console) {
    logger.add(consoleTransport);
  }

  if (config.file) {
    logger.add(dailyRotateFileTransport);
  }

  global.logger = logger;
  return logger;
};

const defaultConfig = {
  level: env === 'development' ? levels[4] : levels[2],
  logDir: 'log',
};

const log = (customConfig) => init(Object.assign({}, defaultConfig, customConfig));

module.exports = {
  log,
};
